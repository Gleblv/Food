{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA,uCAAuC;AACvC;AACA,MAAM,OAAO;AACb;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA,MAAM,OAAO;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E;AAC9E;AACA;AACA,wFAAwF;AACxF;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA,oBAAoB;AACpB;AACA;AACA,+BAA+B;AAC/B;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA,sCAAsC;AACtC;AACA,2DAA2D;AAC3D,kEAAkE;AAClE,yFAAyF;AACzF,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA,iBAAiB;AACjB;AACA,qDAAqD;AACrD;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA,cAAc;AACd;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AChHA;AACA;AACA;AACA,iBAAiB;AACjB,oFAAoF;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,oBAAoB;AACpB,2DAA2D;AAC3D;AACA,4CAA4C;AAC5C;AACA;AACA,cAAc;AACd,kFAAkF;AAClF;AACA;AACA;AACA;AACA,2BAA2B,UAAU,MAAM,SAAS;AACpD,kDAAkD,eAAe;AACjE,gDAAgD,UAAU;AAC1D;AACA;AACA;AACA,0DAA0D,WAAW;AACrE;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA,yCAAyC;AACzC,sCAAsC;AACtC;AACA,uBAAuB;AACvB,+CAA+C,IAAI,WAAW,WAAW;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iCAAiC,OAAO;AACnE,uGAAuG;AACvG,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,iCAAiC;AAC3D;AACA;AACA;AACA;AACA;AACA,8BAA8B,KAAK,MAAM,OAAO;AAChD,qDAAqD,MAAM;AAC3D,mDAAmD,MAAM;AACzD;AACA;AACA;AACA,6DAA6D,MAAM;AACnE;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;;;;;;;;ACpGA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,6CAA6C;AAC7C,wCAAwC;AACxC;AACA,wBAAwB;AACxB;AACA,cAAc;AACd;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,mCAAmC;AACnC,sDAAsD;AACtD,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,oDAAoD;AACpD;AACA,cAAc,gBAAgB;AAC9B,gDAAgD;AAChD,cAAc,kBAAkB;AAChC,+BAA+B;AAC/B,cAAc;AACd,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA,4DAA4D;AAC5D,qDAAqD;AACrD;AACA;AACA,6DAA6D;AAC7D,6CAA6C,QAAQ;AACrD;AACA;AACA;AACA,+DAA+D;AAC/D,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;;;;;;;;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,8CAA8C,YAAY;AAC1D,KAAK;AACL;AACA,iDAAiD;AACjD,uFAAuF;AACvF;AACA;AACA,KAAK;AACL;AACA,sDAAsD;AACtD,2EAA2E;AAC3E;AACA;AACA,KAAK;AACL;AACA,sDAAsD;AACtD;AACA,oCAAoC;AACpC,uHAAuH;AACvH;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,8BAA8B,wBAAwB;AACtD,mCAAmC,MAAM;AACzC,IAAI;AACJ;AACA;AACA;AACA;AACA,iEAAiE;AACjE;AACA;AACA;AACA,2CAA2C;AAC3C;AACA,sCAAsC;AACtC;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,6BAA6B,OAAO;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA,QAAQ,OAAO;AACf;AACA;AACA;AACA,mDAAmD,OAAO;AAC1D;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,wCAAwC,MAAM;AAC9C,QAAQ;AACR;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,yBAAyB;AACzB;AACA,QAAQ,OAAO;AACf;AACA;AACA;AACA,mDAAmD,OAAO;AAC1D;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,wCAAwC,MAAM;AAC9C,QAAQ;AACR;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,OAAO;AAC9D;AACA;AACA,4CAA4C,MAAM;AAClD,YAAY;AACZ;AACA;AACA;AACA;AACA,OAAO;AACP,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,UAAU;AACpD,WAAW;AACX,yCAAyC,UAAU;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;;;;;;;;;AChNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,SAAS;AACT;AACA;AACA,6DAA6D;AAC7D,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA,wCAAwC;AACxC,sCAAsC;AACtC;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,wBAAwB,IAAI;AAC5B,UAAU;AACV;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA,uBAAuB;AACvB;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;UCzDA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA;AACA,iBAAiB,mBAAO,CAAC,4CAAgB;AACzC,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,iBAAiB,mBAAO,CAAC,4CAAgB;AACzC,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,mBAAmB,mBAAO,CAAC,gDAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,E","sources":["webpack://food/./js/modules/calc.js","webpack://food/./js/modules/cards.js","webpack://food/./js/modules/forms.js","webpack://food/./js/modules/modal.js","webpack://food/./js/modules/slider.js","webpack://food/./js/modules/tabs.js","webpack://food/./js/modules/timer.js","webpack://food/webpack/bootstrap","webpack://food/./js/script.js"],"sourcesContent":["function calc () {\r\n    // Calc\r\n\r\n    const result = document.querySelector(\".calculating__result span\"); // куда мы будем вовыдоить ко-во кл\r\n\r\n    let sex, height, weight, age, ratio;\r\n\r\n    if (localStorage.getItem(\"sex\")) { // Если в локальном хранилище уже есть какие-то данные\r\n        sex = localStorage.getItem(\"sex\");\r\n    } else { // если нет\r\n        sex = \"femail\";\r\n        localStorage.setItem(\"sex\", \"femail\");\r\n    }\r\n\r\n    if (localStorage.getItem(\"ratio\")) { // Если в локальном хранилище уже есть какие-то данные\r\n        ratio = localStorage.getItem(\"ratio\");\r\n    } else { // если нет\r\n        ratio = 1.375;\r\n        localStorage.setItem(\"ratio\", 1.375);\r\n    }\r\n\r\n    function initLocalSettings (selector, activeClass) {\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        elements.forEach(element => {\r\n            element.classList.remove(activeClass);\r\n            if (element.getAttribute(\"id\") === localStorage.getItem(\"sex\")) { // Если значение атрибута есть в локальном хранилище\r\n                element.classList.add(activeClass);\r\n            }\r\n            if (element.getAttribute(\"data-ratio\") === localStorage.getItem(\"ratio\")) { // Если значение атрибута есть в локальном хранилище\r\n                element.classList.add(activeClass);\r\n            }\r\n        });\r\n    }\r\n\r\n    initLocalSettings(\"#gender div\", \"calculating__choose-item_active\");\r\n    initLocalSettings(\".calculating__choose_big div\", \"calculating__choose-item_active\");\r\n\r\n    function calcTotal () {\r\n        if (!sex || !height || !weight || !age || !ratio) { // Если не указаны какие-то данные\r\n            result.textContent = \"Не введены все данные\";\r\n            return; // досрочно заканчиваем функцию\r\n        };\r\n\r\n        if (sex == \"female\") { // Расчитываем кол-во кл в зависимости от пола\r\n            result.textContent = ~~((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n        } else {\r\n            result.textContent = ~~((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n        };\r\n    }\r\n\r\n    calcTotal();\r\n\r\n    function getSaticInf (selector, activeClass) { // функция для получения информации\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        elements.forEach(element => { // навешиваем обработчик событий на каждый элемент\r\n            element.addEventListener(\"click\", (e) => { \r\n                if (e.target.getAttribute(\"data-ratio\")) { // если у элемента есть атрибут со значением data-ratio то\r\n                    ratio = +e.target.getAttribute(\"data-ratio\"); // в переменную присваиваем значение этого атрибута\r\n                    localStorage.setItem(\"ratio\", +e.target.getAttribute(\"data-ratio\")); // записываем значение в локальное хранилище\r\n                } else { // в остальных случаях получаем id элемента\r\n                    sex = e.target.getAttribute(\"id\");\r\n                    localStorage.setItem(\"sex\", e.target.getAttribute(\"id\"));\r\n                }\r\n    \r\n                elements.forEach(element => { // удаляем у всех элементов класс активности\r\n                    element.classList.remove(activeClass);\r\n                });\r\n    \r\n                e.target.classList.add(activeClass); // добавляем класс активности нажатому элементу\r\n    \r\n                calcTotal();\r\n            });\r\n        });\r\n    }\r\n\r\n    getSaticInf(\"#gender div\", \"calculating__choose-item_active\");\r\n    getSaticInf(\".calculating__choose_big div\", \"calculating__choose-item_active\");\r\n\r\n    function getDinamicInf (selector) { // функция для получения информации из input\r\n        const input = document.querySelector(selector);\r\n\r\n        input.addEventListener(\"input\", () => {\r\n\r\n            if (input.value.match(/\\D/g)) { // если пользователь вводит не число\r\n                input.style.border = \"1px solid red\";\r\n            } else {\r\n                input.style.border = \"none\";\r\n            }\r\n\r\n            switch(input.getAttribute(\"id\")) { // определяем в какую переменную записывать значение input\r\n                case \"height\": \r\n                    height = +input.value;\r\n                    break;\r\n                case \"weight\":\r\n                    weight = +input.value;\r\n                    break;\r\n                case \"age\": \r\n                    age = input.value;\r\n                    break;\r\n            }\r\n\r\n            calcTotal();\r\n        });\r\n    }\r\n\r\n    getDinamicInf(\"#height\");\r\n    getDinamicInf(\"#weight\");\r\n    getDinamicInf(\"#age\");\r\n}\r\n\r\nmodule.exports = calc","function cards () {\r\n    // menuCards\r\n\r\n    class Card { // Создаём класс\r\n        constructor (src, alt, menuTitle, text, price, parentSelector, ...clases) { // \"...clases\" - массив с аргументы, которые мы в будущем можем доваить, а можем и нет\r\n            this.src = src;\r\n            this.alt = alt;\r\n            this.menuTitle = menuTitle;\r\n            this.text = text;\r\n            this.price = price;\r\n            this.clases = clases;\r\n            this.parent = document.querySelector(parentSelector);\r\n            this.transfer = 27;\r\n            this.cahngeToUAH();\r\n        }\r\n\r\n        cahngeToUAH () { // Метод для конвертации USD в UAH\r\n            this.price *= this.transfer;\r\n        }\r\n\r\n        render () { // Метод для создания элемента и помещения его на страницу\r\n            const element = document.createElement(\"div\"); // Создаём контейнер\r\n\r\n            if (this.clases.length === 0) { // Если в массив \"clases\" не были помещены аргументы, то добавляем один по умолчанию\r\n                this.clases = \"menu__item\"\r\n                element.classList.add(this.element);\r\n            } else {\r\n                this.clases.forEach(clasName => element.classList.add(clasName)); // Добавляем все классы из масссива \"clases\" нашему div-контейнеру\r\n            }\r\n\r\n            element.innerHTML = \r\n            `\r\n                <img src=${this.src} alt=${this.alt}>\r\n                <h3 class=\"menu__item-subtitle\">${this.menuTitle}\"</h3>\r\n                <div class=\"menu__item-descr\">${this.text}</div>\r\n                <div class=\"menu__item-divider\"></div>\r\n                <div class=\"menu__item-price\">\r\n                    <div class=\"menu__item-cost\">Цена:</div>\r\n                    <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\r\n                </div>\r\n            `;\r\n            this.parent.append(element); // Добавляем контейнер в родителя\r\n        }\r\n    }\r\n\r\n    // Функция чтобы получить данные из DataBase\r\n    const getResource = async (url) => { // оператор async говорит что внутри функции у нас будет какой-то асинхронный код\r\n        const res = await fetch(url); // await ставиться перед операциями которых необходимо дождаться\r\n\r\n        if (!res.ok) { // Если наш запрос не выполняется, то выводим ошибку\r\n            throw new Error(`Could not fetch ${url}, status ${res.status}`);\r\n        }\r\n\r\n        return await res.json();\r\n    };\r\n\r\n    // 1-ый способ добавления карточек с помощью классов (динамический)\r\n    getResource(\"http://localhost:3000/menu\") // Путь откуда ма бурём данные\r\n        .then(data => {\r\n            data.forEach(({img, altimg, title, descr, price}) => { // Перебираем массив с объектами с сервера и берём из объектов свойства\r\n                new Card(img, altimg, title, descr, price, \".menu .container\", \"menu__item\").render(); // По сути тоже самое что и код закоментированный ниэе\r\n            });\r\n        });\r\n\r\n    // 2-ой способ добавления карточек с помощью классов (в ручную)\r\n    // new Card(\r\n    //     \"img/tabs/vegy.jpg\",\r\n    //     \"vegy\",\r\n    //     'Меню \"Фитнес\"',\r\n    //     'Меню \"Фитнес\" - это новый подход к приготовлению блюд: больше свежих овощей и фруктов. Продукт активных и здоровых людей. Это абсолютно новый продукт с оптимальной ценой и высоким качеством!',\r\n    //     9,\r\n    //     \".menu .container\",\r\n    //     \"menu__item\" // Записываем классы, которые хотим добавить div-контейнеру \r\n    // ).render();\r\n\r\n    // 3-ий спопсоб добавления карточек без использования классов(динамический)\r\n    // getResource('http://localhost:3000/menu')\r\n    //     .then(data => createCard(data));\r\n\r\n    // function createCard(data) {\r\n    //     data.forEach(({img, altimg, title, descr, price}) => {\r\n    //         const element = document.createElement('div');\r\n\r\n    //         element.classList.add(\"menu__item\");\r\n\r\n    //         element.innerHTML = `\r\n    //             <img src=${img} alt=${altimg}>\r\n    //             <h3 class=\"menu__item-subtitle\">${title}</h3>\r\n    //             <div class=\"menu__item-descr\">${descr}</div>\r\n    //             <div class=\"menu__item-divider\"></div>\r\n    //             <div class=\"menu__item-price\">\r\n    //                 <div class=\"menu__item-cost\">Цена:</div>\r\n    //                 <div class=\"menu__item-total\"><span>${price}</span> грн/день</div>\r\n    //             </div>\r\n    //         `;\r\n    //         document.querySelector(\".menu .container\").append(element);\r\n    //     });\r\n    // }\r\n}\r\n\r\nmodule.exports = cards;","function forms () {\r\n     //Forms\r\n\r\n     const forms = document.querySelectorAll(\"form\");\r\n\r\n     message = { // Сообщения для пользователя\r\n         loading: \"img/form/spinner.svg\", // значок загрузки\r\n         succsess: \"Спасибо! Мы ка можно скорее с вами свяжемся\",\r\n         fail: \"Что-то пошло не так...\"\r\n     }\r\n \r\n     forms.forEach(item => {\r\n         bindPostData(item);\r\n     });\r\n \r\n     const postData = async (url, data) => { // оператор async говорит что внутри функции у нас будет какой-то асинхронный код\r\n         const res = await fetch(url, { // await ставиться перед операциями которых необходимо дождаться\r\n             method: \"POST\", //метод\r\n             headers: { //заголовки\r\n                 \"Content-type\": \"application/json\"\r\n             },\r\n             body: data // что мы передаём\r\n         });\r\n \r\n         return await res.json();\r\n     };\r\n \r\n     function bindPostData(form) { // Создаём функцию для отпрвки формы\r\n         form.addEventListener(\"submit\", (event) => { // Когда пользователь отправляет форму\r\n             event.preventDefault(); // ОТменяем стандартное поведение, чтобы страница не перезагружалась\r\n \r\n             const statusMessage = document.createElement(\"img\");\r\n             statusMessage.src = message.loading;\r\n             statusMessage.style.cssText = `\r\n                 display: block;\r\n                 margin: 0 auto;\r\n             `;\r\n             // form.append(statusMessage);\r\n             form.insertAdjacentElement(\"afterend\", statusMessage); // Вставка элемента после формы\r\n             \r\n             const formData = new FormData(form); // Формируем специальный объект для отправки данных из формы на сервер\r\n \r\n             // Перервод данныз из формата FormData в JSON\r\n             const json = JSON.stringify(Object.fromEntries(formData.entries())) // переводим из формата FormData в JSON\r\n \r\n             postData(\"http://localhost:3000/requests\", json) \r\n             .then(data => {\r\n                 console.log(data); // Выводим в консоль ответ от сервера\r\n                 showThanksModal(message.succsess); // показываем окно с сообщением об успешной отправке\r\n                 statusMessage.remove();\r\n             }).catch(() => { // если возникает ошибка\r\n                 showThanksModal(message.fail); // показываем коно с сообщение об ошибке\r\n             }).finally(() => { // в любом случае\r\n                 form.reset(); // Сбрасываем заполненные поля формы после отправки\r\n             })\r\n         });\r\n     }\r\n \r\n     function showThanksModal (message) {\r\n         const previosModalDilog = document.querySelector(\".modal__dialog\");\r\n \r\n         previosModalDilog.classList.add(\"hide\"); // Скрываем контент модального окна\r\n         openModal();\r\n \r\n         const thanksModal = document.createElement(\"div\"); // создаём контейнер для нового контента\r\n         thanksModal.classList.add(\"modal__dialog\"); // добавляем контейнер для нового контента\r\n         thanksModal.innerHTML = ` // добавляем сам контент\r\n             <div class=\"modal__content\">\r\n                 <div class=\"modal__close\" data-close>&times;</div>\r\n                 <div class=\"modal__title\">${message}</div>\r\n             </div>\r\n         `;\r\n \r\n         document.querySelector(\".modal\").append(thanksModal); // помещаем его в модальное окно\r\n         setTimeout(() => { // Сбрасываем новый контент и возвращаем старый\r\n             thanksModal.remove();\r\n             previosModalDilog.classList.add(\"show\");\r\n             previosModalDilog.classList.remove(\"hide\");\r\n             closeModal();\r\n         }, 5000)\r\n     }\r\n}\r\n\r\nmodule.exports = forms;","function modal () {\r\n    // Modal\r\n\r\n    const modalTrigers = document.querySelectorAll(\"[data-modal]\"), \r\n          modal = document.querySelector(\".modal\");\r\n\r\n    function openModal () { // Функция для открытия модельного окна\r\n        modal.classList.add(\"show\");\r\n        document.body.style.overflow = \"hidden\";\r\n        modal.classList.remove(\"hide\");\r\n        clearInterval(modalTimeID);\r\n    }\r\n\r\n    function closeModal () { // Функция для закрытия модельного окна\r\n        modal.classList.add(\"hide\");\r\n        document.body.style.overflow = \"\";\r\n        modal.classList.remove(\"show\");\r\n    }\r\n\r\n    modalTrigers.forEach(item => {  // Навешиваем обработчик событий на кнопки из псевдомассива\r\n        item.addEventListener(\"click\", () => {openModal()});\r\n    });\r\n\r\n    modal.addEventListener(\"click\", (event) => { // Закрытие посредством нажатия на пустую область\r\n        if (event.target === modal || event.target.getAttribute(\"data-close\") == \"\") { // Если точка куда кликнул пользователь совпадает с точкой вне модельного окна, то закрываем его\r\n            closeModal();\r\n        }\r\n    });\r\n\r\n    document.addEventListener(\"keydown\", (event) => { // Закрытие посредством нажатия кнопки Escape\r\n        if (event.code === \"Escape\" && modal.classList.contains(\"show\")) { // Если код кнопки равен Escape и модельное окно показано, то закрываем его\r\n            closeModal();\r\n        }\r\n    });\r\n\r\n    const modalTimeID = setTimeout(openModal, 50000); // Устанавливаем открытие модельного окна через 6 секунд, как пользователь зашёл на сайт\r\n\r\n    function openModalByScroll () { // Открываем модельное окно когда пользователь долистывает страничку до конца\r\n        if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight - 1) { // Если высота пролистанного контента + высота окна с которым работает пользователь равна высоте всего сайта, то показываем модельное окно\r\n            openModal();\r\n            window.removeEventListener(\"scroll\", openModalByScroll); // удаляем обработчик пролистывания\r\n        }\r\n    }\r\n\r\n    window.addEventListener(\"scroll\", openModalByScroll);\r\n}\r\n\r\nmodule.exports = modal;","function slider () {\r\n        // Slider \r\n\r\n        const sliderContainers = document.querySelectorAll(\".offer__slide\"),\r\n        slider = document.querySelector(\".offer__slider\"),\r\n        leftSlideBtn = document.querySelector(\".offer__slider-prev\"),\r\n        rightSlideBtn = document.querySelector(\".offer__slider-next\"),\r\n        leftNumber = document.querySelector(\"#current\"),\r\n        total = document.querySelector(\"#total\"),\r\n        slidesWrapper = document.querySelector(\".offer__slider-wrapper\"), // своеобразное окно через которое будет видно только один элемент\r\n        slidesField = document.querySelector(\".offer__slider-inner\"), // контейнер со всеми элементами\r\n        width = window.getComputedStyle(slidesWrapper).width; // ширина окна\r\n\r\n  let index = 1;\r\n  let offset = 0; // для контролся отступов \r\n\r\n  // Слайдер \"каруселью\"\r\n\r\n  // Функция для трансформации строк в числа\r\n  function toNum (str) {\r\n      return +str.replace(/\\D/g, \"\");\r\n  }\r\n\r\n  function activeDot (arr, ind) {\r\n      arr.forEach(element => {\r\n          element.style.opacity = 0.5;\r\n      });\r\n      arr[ind - 1].style.opacity = 1;\r\n  }\r\n\r\n  // ставим началльные значения для чисел\r\n  if (sliderContainers.length < 10) {\r\n      total.textContent = `0${sliderContainers.length}`;\r\n      leftNumber.textContent = `0${index}`;\r\n  } else {\r\n      total.textContent = sliderContainers.length;\r\n      leftNumber.textContent = index;\r\n  }\r\n\r\n  slidesField.style.width = 100 * sliderContainers.length + \"%\"; // расстягиваем наше окно чтобы туда поместились все элементы\r\n  slidesField.style.display = \"flex\";\r\n  slidesField.style.transition = \"0.5s all\";\r\n\r\n  slidesWrapper.style.overflow = \"hidden\"; // обрезаем все элементы выходящие за границы окна\r\n\r\n  sliderContainers.forEach(slide => { // делаем все элементы одинаково ширины\r\n      slide.style.width = width;\r\n  });\r\n\r\n  slider.style.position = \"relative\";\r\n\r\n  const indicators = document.createElement(\"ol\"), // создаём список в который помещаем точки\r\n        dots = []; // созадём массив в который тоже помещяем точки\r\n\r\n  indicators.classList.add(\"carousel-indicators\");\r\n  indicators.style.cssText = `\r\n      position: absolute;\r\n      right: 0;\r\n      bottom: 0;\r\n      left: 0;\r\n      z-index: 15;\r\n      display: flex;\r\n      justify-content: center;\r\n      margin-right: 15%;\r\n      margin-left: 15%;\r\n      list-style: none;\r\n  `;\r\n  slider.append(indicators);\r\n\r\n  for (let i = 0; i < sliderContainers.length; i++) { // с помощью цикла создаём кол-во точек = кол-ву слайдов\r\n      const dot = document.createElement(\"li\");\r\n      dot.setAttribute(\"data-slide-to\", i + 1);\r\n      dot.style.cssText = `\r\n          box-sizing: content-box;\r\n          flex: 0 1 auto;\r\n          width: 30px;\r\n          height: 6px;\r\n          margin-right: 3px;\r\n          margin-left: 3px;\r\n          cursor: pointer;\r\n          background-color: #fff;\r\n          background-clip: padding-box;\r\n          border-top: 10px solid transparent;\r\n          border-bottom: 10px solid transparent;\r\n          opacity: .5;\r\n          transition: opacity .6s ease;\r\n      `;\r\n      if (i == 0) { // первую точку сразу выделяем\r\n          dot.style.opacity = 1;\r\n      }\r\n      indicators.append(dot);\r\n      dots.push(dot);\r\n  }\r\n\r\n  rightSlideBtn.addEventListener('click', () => {\r\n      if (offset == toNum(width) * (sliderContainers.length - 1)) {  // Если мы отступ доходит до конца, то возвращаем всё в начало\r\n          offset = 0;\r\n      } else { // в отсальных случаях отступаем вправо на ширину одного элемента\r\n          offset += toNum(width);  \r\n      }\r\n\r\n      slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n      if (index == sliderContainers.length) {\r\n          index = 1;\r\n      } else {\r\n          index++;\r\n      }\r\n\r\n      if (sliderContainers.length < 10) {\r\n          leftNumber.textContent =  `0${index}`;\r\n      } else {\r\n          leftNumber.textContent =  index;\r\n      }\r\n\r\n      activeDot(dots, index);\r\n  });\r\n\r\n  leftSlideBtn.addEventListener('click', () => {\r\n      if (offset == 0) { // если мы находимся в начале то отступаем в конец\r\n          offset = toNum(width) * (sliderContainers.length - 1);\r\n      } else { // в остальных случаем отступаем влево на ширину одного элемента\r\n          offset -= toNum(width);\r\n      }\r\n\r\n      slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n      if (index == 1) {\r\n          index = sliderContainers.length;\r\n      } else {\r\n          index--;\r\n      }\r\n\r\n      if (sliderContainers.length < 10) {\r\n          leftNumber.textContent =  `0${index}`;\r\n      } else {\r\n          leftNumber.textContent =  index;\r\n      }\r\n\r\n      activeDot(dots, index);        \r\n  });\r\n\r\n  dots.forEach(dot => {\r\n      dot.addEventListener(\"click\", (e) => {\r\n          const slideTo = e.target.getAttribute(\"data-slide-to\");\r\n\r\n          index = slideTo;\r\n          offset = toNum(width) * (slideTo - 1);\r\n\r\n          slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n          if (sliderContainers.length < 10) {\r\n              leftNumber.textContent =  `0${index}`;\r\n          } else {\r\n              leftNumber.textContent =  index;\r\n          }\r\n\r\n          activeDot(dots, index);\r\n      });\r\n  });\r\n\r\n\r\n  // Простой слайдер\r\n\r\n  // index = 0;\r\n\r\n  // changeNumbers(0);\r\n  // showSlideImg(0);\r\n\r\n  // function showSlideImg (index) { \r\n  //     sliderContainers.forEach(container => {\r\n  //         container.style.display = \"none\";\r\n  //     });\r\n\r\n  //     sliderContainers[index].style.display = \"block\"\r\n  // }\r\n\r\n  // function changeNumbers (index) {\r\n  //     if (index < 10) {\r\n  //         leftNumber.textContent = `0${index + 1}`;\r\n  //     } else {\r\n  //         leftNumber.textContent = `${index + 1}`;\r\n  //     }\r\n  // }\r\n\r\n  // leftSlideBtn.addEventListener(\"click\", () => {\r\n  //     if (index == 0) {\r\n  //         index = 3;\r\n  //     } else {\r\n  //         index--;\r\n  //     };\r\n\r\n  //     changeNumbers(index);\r\n  //     showSlideImg(index);\r\n  // });\r\n\r\n  // rightSlideBtn.addEventListener(\"click\", () => {\r\n  //     if (index >= sliderContainers.length - 1) {\r\n  //         index = 0;\r\n  //     } else {\r\n  //         index++;\r\n  //     }\r\n\r\n  //     changeNumbers(index);\r\n  //     showSlideImg(index);\r\n  // });\r\n}\r\n\r\nmodule.exports = slider;","function tabs () {\r\n\r\n    //Tabs\r\n\r\n    const tabsMenu = document.querySelector(\".tabheader__items\"),\r\n          tabs = document.querySelectorAll(\".tabheader__item\"),\r\n          tabsContent = document.querySelectorAll(\".tabcontent\");\r\n          \r\n    function hideTabContent() {\r\n        tabsContent.forEach(item => {\r\n            item.style.display = \"none\"; // Скрываем конктент каждого таба\r\n        });\r\n\r\n        tabs.forEach(item => {\r\n            item.classList.remove(\"tabheader__item_active\"); // Удаляем класс активности у каждого таба\r\n        });\r\n    }\r\n\r\n    function showTabContent(i = 0) {\r\n        tabsContent[i].style.display = \"block\";\r\n        tabs[i].classList.add(\"tabheader__item_active\");\r\n    }\r\n\r\n    hideTabContent();\r\n    showTabContent();\r\n\r\n    tabsMenu.addEventListener(\"click\", (event) => {\r\n        const target = event.target; // Показывает куда нажал пользователь\r\n\r\n        if (target && target.classList.contains(\"tabheader__item\")) {\r\n            tabs.forEach((item, i) => { // Перебираем все табы\r\n                if (item == target) { // Если один из табов совпадает со значение target, то показываем его\r\n                    hideTabContent();\r\n                    showTabContent(i);\r\n                };\r\n            });\r\n        };\r\n    });\r\n}\r\n\r\nmodule.exports = tabs;","function timer () {\r\n\r\n    //Timer\r\n\r\n    const deadline = \"2021-12-31\"; // Дата окончания\r\n\r\n    function getTimeRemaning(endtime) { // Получаем разницу между сегодняшней датой и датой окончания и высчитываем из этой разницы кол-во дней, часов и т.д.\r\n        const t = Date.parse(endtime) - Date.parse(new Date()),\r\n              days = ~~(t / (1000 * 60 * 60 * 24)),\r\n              hours = ~~((t / (1000 * 60 * 60) % 24)),\r\n              minutes = ~~((t / 1000 / 60) % 60),\r\n              seconds = ~~((t / 1000) % 60);\r\n              \r\n        return {\r\n            \"total\": t,\r\n            \"days\": days,\r\n            \"hours\": hours,\r\n            \"minutes\": minutes,\r\n            \"seconds\": seconds\r\n        };\r\n    }\r\n\r\n    function getZero (num) { // Если число однозначное - добавляем 0\r\n        if (num >= 0 && num < 10) {\r\n            return (`0${num}`);\r\n        } else {\r\n            return num;\r\n        }\r\n    }\r\n\r\n    function setClock (selector, endtime) { // Устанавливаем таймер в HTML\r\n        const timer = document.querySelector(selector),\r\n              days = timer.querySelector(\"#days\"),\r\n              hours = timer.querySelector(\"#hours\"),\r\n              minutes = timer.querySelector(\"#minutes\"),\r\n              seconds = timer.querySelector(\"#seconds\"),\r\n              timeInterval = setInterval(updateClock, 1000); //Обновление часов каждую секунду\r\n              \r\n        updateClock(); // Обновление часов при загрузке или обновлении сайта\r\n\r\n        function updateClock() { // Обновление часов\r\n            t = getTimeRemaning(endtime);\r\n\r\n            days.innerHTML = getZero(t.days);\r\n            hours.innerHTML = getZero(t.hours);\r\n            minutes.innerHTML = getZero(t.minutes);\r\n            seconds.innerHTML = getZero(t.seconds);\r\n\r\n            if(t.total <= 0) { // Убираем обновление часов\r\n                clearInterval(timeInterval);\r\n            }\r\n        }\r\n    }\r\n\r\n    setClock(\".timer\", deadline);\r\n}\r\n\r\nmodule.exports = timer;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","window.addEventListener(\"DOMContentLoaded\", () => {\r\n    const tabs = require(\"./modules/tabs\"),\r\n          modal = require(\"./modules/modal\"),\r\n          timer = require(\"./modules/timer\"),\r\n          cards = require(\"./modules/cards\"),\r\n          calc = require(\"./modules/calc\"),\r\n          forms = require(\"./modules/forms\"),\r\n          slider = require(\"./modules/slider\");\r\n\r\n    tabs();\r\n    modal();\r\n    timer();\r\n    cards();\r\n    calc();\r\n    forms();\r\n    slider();\r\n});"],"names":[],"sourceRoot":""}